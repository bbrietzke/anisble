{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Setting up Raspberry Pi with Ansible A set of helpful commands and tools to make setting up a Raspberry Pi a little easier. This is the way I prefer to setup an RPi, so your mileage may very. That should not stop you from forking the code and doing your own thing. Building the SD Card diskutil unmountDisk /dev/disk2 && \\ sudo dd bs=1m if=~/Downloads/2020-02-13-raspbian-buster-lite.img of=/dev/rdisk2 && \\ sleep 3 && \\ touch /Volumes/boot/ssh && \\ diskutil unmountDisk /dev/disk2 Setup Following Ansible best practices , the project is structured with an inventories folder that contains the list of hosts that you will want to talk to. There is a work and a home option that contains the names/ips and usernames of the host machines. Also included are the various children which relates to the groups that contain the roles that you will implement the software and configuration that will be installed. The bootable images should be saved in the boot directory. Make sure you updated the image names in the Makefile so the image creation commands work. Personalization Additional directories can be added to inventories and setup similiar to home or work depending on how you want things to work or look. Commands Everything should be driven through the Makefile . make home - Create a new project. make rasbian - create the rasbian image. make ubuntu - create the ubuntu image. make docs - Build the docs and upload them to gh-pages. Project layout boot/ # saved files for copying to the boot images images/ # where to save the img files from the RPF and Ubuntu home/ inventory/ hosts # all the machines in the network group_vars/ # variables to override different roles based on groupings host_vars/ # variables related to specific hosts project/ default.yml # default or site playbook updates.yml # just doing updates and not much else roles/ # where the various roles live common/ julia/ jupyterhub/ nginx/ python/ updates/ Role Details julia Downloads the Juila tar file and installs it to /opt creates a julia user for distributed work over ssh jupyterhub Install Jupyter Hub Sets it up to run as a service nginx Vanillia NGinx install Python bring Python3 up to snuff","title":"Home"},{"location":"#setting-up-raspberry-pi-with-ansible","text":"A set of helpful commands and tools to make setting up a Raspberry Pi a little easier. This is the way I prefer to setup an RPi, so your mileage may very. That should not stop you from forking the code and doing your own thing.","title":"Setting up Raspberry Pi with Ansible"},{"location":"#building-the-sd-card","text":"diskutil unmountDisk /dev/disk2 && \\ sudo dd bs=1m if=~/Downloads/2020-02-13-raspbian-buster-lite.img of=/dev/rdisk2 && \\ sleep 3 && \\ touch /Volumes/boot/ssh && \\ diskutil unmountDisk /dev/disk2","title":"Building the SD Card"},{"location":"#setup","text":"Following Ansible best practices , the project is structured with an inventories folder that contains the list of hosts that you will want to talk to. There is a work and a home option that contains the names/ips and usernames of the host machines. Also included are the various children which relates to the groups that contain the roles that you will implement the software and configuration that will be installed. The bootable images should be saved in the boot directory. Make sure you updated the image names in the Makefile so the image creation commands work.","title":"Setup"},{"location":"#personalization","text":"Additional directories can be added to inventories and setup similiar to home or work depending on how you want things to work or look.","title":"Personalization"},{"location":"#commands","text":"Everything should be driven through the Makefile . make home - Create a new project. make rasbian - create the rasbian image. make ubuntu - create the ubuntu image. make docs - Build the docs and upload them to gh-pages.","title":"Commands"},{"location":"#project-layout","text":"boot/ # saved files for copying to the boot images images/ # where to save the img files from the RPF and Ubuntu home/ inventory/ hosts # all the machines in the network group_vars/ # variables to override different roles based on groupings host_vars/ # variables related to specific hosts project/ default.yml # default or site playbook updates.yml # just doing updates and not much else roles/ # where the various roles live common/ julia/ jupyterhub/ nginx/ python/ updates/","title":"Project layout"},{"location":"#role-details","text":"","title":"Role Details"},{"location":"#julia","text":"Downloads the Juila tar file and installs it to /opt creates a julia user for distributed work over ssh","title":"julia"},{"location":"#jupyterhub","text":"Install Jupyter Hub Sets it up to run as a service","title":"jupyterhub"},{"location":"#nginx","text":"Vanillia NGinx install","title":"nginx"},{"location":"#python","text":"bring Python3 up to snuff","title":"Python"}]}