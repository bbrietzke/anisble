# -*- python -*-
# ex: set filetype=python:

from buildbot.plugins import *
import builds.schedulers as SH
import builds.sources as S
import builds.builders as B

default_password = "password"

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory.

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

c['buildbotNetUsageData'] = None

####### WORKERS
c['protocols'] = {'pb': {'port': 9989}}

# The 'workers' list defines the set of recognized workers. Each element is
# a Worker object, specifying a unique worker name and password.  The same
# worker name and password must be configured on the worker.
#c['workers'] = [worker.Worker("example-worker", "pass")]
c['workers'] = [
    worker.LocalWorker("{{ ansible_hostname }}"),
    worker.Worker("calypso_one", default_password)
]


####### CHANGESOURCES
c['change_source'] = [
    S.github_io(),
    S.ansible()
]

####### SCHEDULERS
# Configure the Schedulers, which decide how to react to incoming changes.  In this
# case, just kick off a 'runtests' build

c['schedulers'] = [
    SH.github_io_master(),
    SH.ansible_master(),
    SH.ansible_forced()
]

####### BUILDERS
# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which workers can execute them.  Note that any particular build will
# only take place on one worker.

c['builders'] = [
    B.builder_github_io("{{ ansible_hostname }}"),
    B.builder_ansible("{{ ansible_hostname }}")
]

####### BUILDBOT SERVICES
# 'services' is a list of BuildbotService items like reporter targets. The
# status of each build will be pushed to these targets. buildbot/reporters/*.py
# has a variety to choose from, like IRC bots.

c['services'] = []

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot installation's
# home pages (linked to the 'titleURL').

c['title'] = "{{ buildbot_title }}"
c['titleURL'] = "http://{{ buildbot_url }}/"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in
# the 'www' entry below, but with an externally-visible host name which the
# buildbot cannot figure out without some help.

c['buildbotURL'] = "http://{{ buildbot_url }}/"

# minimalistic config to activate new web UI
c['www'] = dict(port=8010,
                plugins=dict(waterfall_view={}, console_view={}, grid_view={}))

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}
